@inherits LayoutComponentBase
<MudDialogProvider />
<MudSnackbarProvider />
<MudThemeProvider @bind-IsDarkMode="IsDarkMode" Theme="MyCustomTheme" />
<MudLayout>
    <MudAppBar Elevation="2" Dense="true" Fixed="true">
        <MudToggleIconButton Size="Size.Small" ToggledSize="Size.Small" @bind-Toggled="@_drawerOpen"
            Icon="@Icons.Rounded.Menu" Color="Color.Default" ToggledIcon="@Icons.Rounded.ClearAll"
            ToggledColor="@Color.Default" Edge="Edge.Start" />
        <MudText Typo="Typo.h6" Color="Color.Primary" Class="ml-4"> PUP </MudText>
        <MudSpacer />
        <StudentLoginDisplay />
        <MudIconButton Icon="@Icons.Sharp.MoreVert" Color="Color.Default" Size="Size.Small">

        </MudIconButton>
        <MudToggleIconButton @bind-Toggled="@IsDarkMode" Icon="@Icons.Sharp.DarkMode" Color="Color.Dark"
            Title="Go to Dark Mode" ToggledIcon="@Icons.Sharp.LightMode" ToggledColor="@Color.Success" Edge="Edge.End"
            Size="Size.Small" ToggledSize="Size.Small" ToggledTitle="Go to Light Mode" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" hidden="true">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Style="height= 1500px">
            @Body
        </MudContainer>
    </MudMainContent>
    <footer>
    </footer>
</MudLayout>
@code {
    public bool IsDarkMode { get; set; }
    public bool _drawerOpen { get; set; }
    MudTheme MyCustomTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Primary = Colors.Red.Darken4,
            Secondary = Colors.Amber.Accent3,
            AppbarBackground = Colors.Shades.White,
        },
        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "260px",
            DrawerWidthRight = "400px"
        },
        Typography = new Typography()
        {
            Default = new Default()
            {
                FontFamily = new[] { "Poppins", "Roboto", "Helvetica", "Arial", "sans-serif" }
            }
        }
    };
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}