@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject IDialogService DialogService
@layout MainLayout
<AuthorizeView>
    <Authorized>
        <MudMenu AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft" Size="Size.Small">
            <ActivatorContent>
                <MudChip Color="Color.Inherit" Variant="Variant.Outlined">
                    @context.User.Identity?.Name
                    <MudAvatar Class="ml-1" Size="Size.Small" Color="Color.Primary">
                        @GetInitial(context.User.Identity?.Name!)
                    </MudAvatar>
                </MudChip>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem>Profile</MudMenuItem>
                <MudDivider />
                <MudMenuItem @onclick="BeginLogout" Color="Color.Default">
                    LOG OUT
                </MudMenuItem>
            </ChildContent>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudButton Class="rounded-0" DisableElevation="true" OnClick="@((e) => BeginLogin(dialog))"
            Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small">
            LOG IN
        </MudButton>
    </NotAuthorized>
</AuthorizeView>
@code {
    private DialogOptions dialog = new DialogOptions()
    {
        Position = DialogPosition.TopCenter,
        CloseButton = true,
        NoHeader = false,
        DisableBackdropClick = false,
    };
    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
    private void BeginLogin(DialogOptions options)
    {
        DialogService.Show<LoginMenu>("", options);
    }
    public string GetInitial(string name)
    {
        String[] NameParts = name.Split(" ");
        string initial = NameParts[0].FirstOrDefault().ToString().ToUpper() + NameParts[NameParts.Length - 1].FirstOrDefault().ToString().ToUpper();
        return initial;
    }
}
