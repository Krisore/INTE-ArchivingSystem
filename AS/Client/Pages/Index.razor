@page "/"
@page "/{organizationUrl}"
@using Microsoft.AspNetCore.Components.Authorization
@inject IOrganizationService OrganizationService
@inject IDocumentService ResearchService
@layout MainLayout
<MudContainer MaxWidth="MaxWidth.Medium">
    @if (_organization != null)
    {
        <div class="d-block justify-center align-center mt-13">
            <MudText Typo="Typo.h6" Align="Align.Center"> Welcome to the @_organization.Name Section !</MudText>
            <MudDivider Class="my-3" DividerType="DividerType.Middle" />
        </div>
        <ResearchList />
    }
    else
    {
        <AuthorizeView>
            <NotAuthorized>
                <div class="d-block justify-center align-center mt-13">
                    <MudText Typo="Typo.h4"> Welcome to the Polytechnic Universty of the Philippines Archive Files !
                    </MudText>
                    <MudText Typo="Typo.body1"> Go for and add articles to your <strong>library 📚</strong></MudText>
                    <SearchComponent/>
                    <SurveyPrompt Title="How is Our Reference Management System ?" />
                </div>
            </NotAuthorized>
            <Authorized>
                <div class="d-block justify-center align-center mt-13">
                    <MudText Typo="Typo.h4"> Welcome back, @context.User.Identity?.Name!</MudText>
                    <MudText Typo="Typo.body1"> Go for and add articles to your <strong>library 📚</strong></MudText>
                    <SearchComponent />
                    <SurveyPrompt Title="How is Our Reference Management System ?" />
                </div>
            </Authorized>
        </AuthorizeView>
        <ResearchList />
    }
</MudContainer>
@code {
    [Parameter]
    public string? OrganizationUrl { get; set; }

    private Organization _organization = null;
    public string? search { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        await ResearchService.LoadDocuments(OrganizationUrl);
        if (OrganizationUrl != null)
        {
            _organization = OrganizationService.Organizations.FirstOrDefault(o =>
            o.Url.ToLower().Equals(OrganizationUrl.ToLower()));
        }
        else
        {
            _organization = null;
        }

    }
}